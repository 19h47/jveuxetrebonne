/**
 * Single
 *
 * @uses 	.Single
 * @author 	Jérémy Levron <levronjeremy@19h47.fr>
 */
.Single {
	@extend %position-xs-relative;

	.Recipe-print {
		display: none;
	}	

	.l-wrapper {
		overflow-x: hidden;
	}

	/**
	 * Header
	 *
	 * @uses .Single-header
	 */
	&-header {
		// @include padding( bottom 24px );
		@include between( 'xs', 'sm' ) { color: the_color( gray, very-dark )!important; }
		z-index: 10;

		@include from( 'md' ) {
			@include absolute( top 0 right 0 left 0 );
			// @include padding( bottom 0 );
			// color: currentColor;
		}
	}


	/**
	 * Introduction
	 *
	 * @uses .Single-introduction
	 */
	&-introduction {
		@extend %position-xs-relative;

		height: 353px;

		background: {
			attachment: fixed;
			position: center;
			size: cover;
		}

		@include from( 'md' ) {
			height: 100vh;
			max-height: 821px;
		}

		// img {
		// 	@extend %Position-absolute-center;
		// 	@include size( 100% );

		// 	object-fit: cover;
		// }
	}

	
	/**
	 * Article
	 *
	 * @uses .Single-article
	 */
	&-article {
		@extend %position-xs-relative;
		@include padding( top 48px );

		background: {
			color: the_color( white );
		}

		@include from( 'md' ) {
			
			@include padding( 
				right percentage( 182 / 1029 )
				left percentage( 107 / 1029 )
			);

			top: -93px;
		}

		/**
		 * Preview
		 *
		 * @uses .Single-article .preview
		 */
		.preview {
			$font-size: 20;
			$line-height: 33;

			@extend %font-title, %font-bold;
			@include font( $font-size, $line-height );
			
			color: the_color( gray, very-dark );
			
			a { color: the_color( orange, very-soft-01 ); }
		}


		/**
		 * Date
		 *
		 * @uses .Single-article .date
		 */
		.date {
			$font-size: 13;
			$line-height: 80.86;

			@extend %font-semibold, %margin-xs-0, %font-title;
			
			color: the_color( blue, light-grayish );
			font: {
				size: 18px;
			}

			@include from( 'md' ) {
				font: {
					size: ( $font-size * 1px );
				}
			}
			// line-height: ( $line-height / $font-size );
		}


		/**
		 * Title
		 *
		 * @uses .Single-article .title
		 */
		.title {
			
			$font-size: 40;
			$line-height: 48;
			
			@extend %font-body, %margin-xs-0;
			@include font( 35, 42, 20 );

			@include from( 'md' ) {
				@include font( $font-size, $line-height, 20 );
			}
		}


		/**
		 * Content
		 *
		 * @uses .single-article .content
		 */
		.content {
			color: the_color( gray, very-dark-01 );

			h3,
			strong,
			b {
				@extend %font-bold;
			}

			p {
				@include letter-spacing( 15 );
			}

			h3 {
				$font-size: 20; 
				$line-height: 33;

				color: the_color( gray, very-dark );
				font: {
					size: ( $font-size * 1px );
				}
				line-height: ( $line-height / $font-size );
			}

			strong,
			b,
			a {
				color: the_color( orange, very-soft-01 );
			}
				
			a { 
				@extend %position-xs-relative; 

				&::after {
					@extend %Transition-ease;
					@include absolute( top 100% right 0 left 0 );
					
					height: 1px;
					background: { color: transparent; }
					content: '';
				}
			}
			a { 
				&:hover { 
					&::after {
						background: { color: currentcolor; }
					} 
				}
			}

			img {
				max-width: 100%;
				height: auto;
			}

			p img {
             	transition: opacity .5s linear 0.2s;
				
				/* Image with 'data' attribute is hidden */
				&[data-lazy-src] {
				/* we set the opacity to 0 */
				   opacity: 0;
				}
				
				/* Image without 'data' attribute is (or becomes) visible */
				&.lazyloaded {
					/* prepare the future animation */

					/* we set the opacity to 1 to do the magic */
				   	opacity: 1;
				}
			}
		}

		.rich-content-link {
			@extend %display-xs-inline-block, %position-xs-relative, %Cursor-pointer;

			&:hover span {
				background: {
					image: url( '#{ map-get( $directories, svg ) }marker-stroke-orange.svg' );
				}
				
				transform: translate3d( 5px, -3px, 0 );
			}

			span {
				@extend %Position-absolute-center, %display-xs-inline-block, %Transition-ease, %Pointer-events-none;

				background: {
					image: url( '#{ map-get( $directories, svg ) }marker-stroke-blue.svg' );
					position: center;
					size: 100% 100%;
				}
				content: '';
				transition: transform .3s ease-in-out;

				z-index: 10;

			}

			i {
				@extend %position-xs-relative, %font-style-normal;

				z-index: 20;

				b, strong {
					color: the_color( gray, very-dark-01 );
				}
			}
		}

		.image-content-link {
			$animation-duration: 1.15s;
			$this: &;
			@extend %position-xs-relative;

			z-index: 25;

			.letters {
				@extend %position-xs-relative, %Cursor-pointer;
			}

			i {
				@extend %display-xs-inline-block, %Transition-ease;

				animation: {
					direction: alternate;
					duration: .7s;
					iteration-count: infinite;
					name: wave;
					timing-function: ease-in-out;
					play-state: running;
				}
			}

			.image {
				
				@include padding( top 2em bottom 2em );
				@include absolute( left 0 bottom 100% );
				@extend %overflow-hidden, %display-xs-inline-block;
			
				visibility: hidden;

				img {
					@extend %display-xs-inline-block, %vertical-align-middle;
					@extend %Transition-ease;
					max-width: none;
					
					opacity: 0;
				}

				&::after {
					@extend %display-xs-block;
					@include absolute( top 0 right 0 bottom 0 left 0 );
					@include margin( top 2em bottom 2em );

					background: { color: the_color( orange, light-grayish-01 ); }
					content: '';

					animation-duration: $animation-duration;
					transform-origin: right center;
					transform: translateX( 0% ) scaleY( 1 ) scaleX( 0 );
				}
			}

			&::before {
				@extend %Position-fixed-center, %display-xs-block, %Pointer-events-none, %Transition-ease;

				background: { color: rgba( the_color( white ), .9 ) }
				content: '';

				opacity: 0;
				visibility: hidden;
			}

			&:hover {

				i {
					animation: none;
				}

				.image img {
					transition-delay: ( $animation-duration / 2 );
				}
				
				.image,
				.image img,
				&::before {
					opacity: 1;
					visibility: visible;
				}

				.image {

					&::after {
						animation-name: filler;
						animation-iteration-count: 1;
						animation-timing-function: cubic-bezier( 0.81, 0.15, 0.26, 0.99 );
					    animation-fill-mode: forwards;
					}
				}
			}
		}

		.aside {
			@include absolute( top 0 right 0 );

			width: percentage( 76 / 1029 );

			&-inner {
				@include margin( 
					top ( $grid-gutter-width * 4 ) 
					bottom ( $grid-gutter-width * 4 )
				);

			}

			&-socials {
				@extend .list-unstyled;
				@extend %margin-xs-0;

				&__item {
					@extend %vertical-align-middle;
					@include size( $grid-gutter-width );
					@include margin( 
						top ( $grid-gutter-width  / 2 )
						bottom ( $grid-gutter-width  / 2 )
					);

					a {
						@extend %display-xs-block;

						&:hover {
							svg {
								fill: the_color( orange, very-soft-01 );
							}
						}
					}

					svg {
						@extend %display-xs-inline-block, %vertical-align-middle, %Transition-ease;

						max-width: $grid-gutter-width;
						max-height: $grid-gutter-width;

						fill: the_color( blue, light-grayish );
					}
				}
			}

			&-bull {
				@extend %display-xs-block, %text-xs-center;
				@include size( $grid-gutter-width );

				color: the_color( blue, light-grayish );
			}

			&-subscribe {
				@extend %font-semibold, %font-title;
				@include font( 13, $grid-gutter-width-unitless );
				transform: rotate( 90deg ) translate3d( 0, -50%, 0 );
				transform-origin: 0 50%;
				color: the_color( orange, very-soft-01 );
				white-space: nowrap;
			}
		}
	}	


	/**
	 * Breadcrumb
	 *
	 * @uses .Single-breadcrumb
	 */
	&-breadcrumb {
		@extend %font-title, %font-medium, %position-xs-relative;
		@include font( 13, 25 );
		@include padding( top $grid-gutter-width bottom $grid-gutter-width );
		
		&::before {
			@extend %display-xs-block;
			@include absolute( 
				top 0 
				right ( percentage( $grid-gutter-width-unitless / 182 ) * -1 )
				bottom 0
				left ( percentage(  100 / 182 ) * -1 )
			);

			content: '';
			background: 
		        linear-gradient(
		        	-135deg, 
		        	rgba( the_color( orange, light-grayish-03 ), 1 ) 0%,
		        	rgba( the_color( orange, very-soft-05 ), 1 ) 100%
		        );
		    border: {
		    	bottom: {
		    		color: rgba( the_color( orange, dark-grayish ), .15 );
		    		style: solid;
		    		width: 1px;
		    	}
		    }
		    z-index: 5;

		}

		&__items {
			@extend %list-unstyled, %margin-xs-0, %position-xs-relative;

			z-index: 9;

		}
		&__item {
			@include margin( top 1em bottom 1em );

			color: the_color( orange, grayish );

			svg {
				@extend %display-xs-inline-block;
				@include margin( right 9px );

				max-width: 9px;
				max-height: 5px;
				fill: currentColor;
			}

			&:first-child {
				svg {
					@extend %Transition-ease;

					max-height: 2px;
					transform: translate3d( 0, 0, 0 );
				}

				&:hover {
					svg {
						transform: translate3d( ( $grid-gutter-width / -4 ), 0, 0 );
					}
				}
			}

			&.title {

				@extend %font-semibold;

				color: the_color( orange, mostly-desaturated-dark );
			}
		}
	}

	
	/**
	 * Aside
	 *
	 * @uses .Single-aside
	 */
	&-aside {}


	/**
	 * Relationship posts
	 *
	 * @uses .Single .Relationship-posts
	 */
	.Relationship-posts { 
		@include margin( top -40px );

		@include from( 'md' ) {

			@include margin( top ( $grid-gutter-width * -2 ) ); }
		}
}